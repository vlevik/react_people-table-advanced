{"version":3,"sources":["utils/searchHelper.ts","utils/constants.ts","components/PeopleFilters.tsx","components/Loader/Loader.tsx","components/PersonInfo.tsx","components/PeopleTable.tsx","utils/sort.ts","api.ts","components/PeoplePage.tsx","components/Navbar.tsx","components/HomePage.tsx","App.tsx","index.tsx"],"names":["getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","sortBySex","centuries","QUERY_KEY","SEX_KEY","CENTURIES_KEY","SORT_KEY","ORDER_KEY","ALL_KEY","PeopleFilters","setFilteredPeople","allPeople","useSearchParams","searchParams","setSearchParams","centuriesFromParams","getAll","useEffect","filteredPeople","formattedQuery","get","toLowerCase","trim","filter","p","name","includes","motherName","fatherName","sex","slice","centuriesToFilter","length","born","className","map","to","search","cn","type","placeholder","onChange","event","params","target","onClick","century","c","Loader","PersonInfo","person","mother","father","personSlug","useParams","getElement","parent","parentName","element","slug","motherElement","fatherElement","died","tableHeadings","title","sort","PeopleTable","people","setPeople","getParent","find","sortBy","orderBy","sortedPeople","peoples","order","newPeoples","a","b","localeCompare","reverse","header","API_URL","wait","delay","Promise","resolve","setTimeout","getPeople","then","fetch","response","json","PeoplePage","elementToRender","useState","setAllPeople","isLoading","setIsLoading","hasError","setHasError","downloadPeople","peopleFromServer","Navbar","getClassName","isActive","role","HomePage","App","path","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.b5dc923d.chunk.js","sourcesContent":["export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","export const sortBySex = ['All', 'Male', 'Female'];\n\nexport const centuries = ['16', '17', '18', '19', '20'];\n\nexport const QUERY_KEY = 'query';\nexport const SEX_KEY = 'sex';\nexport const CENTURIES_KEY = 'centuries';\nexport const SORT_KEY = 'sort';\nexport const ORDER_KEY = 'order';\nexport const ALL_KEY = 'All';\n","import React, { useEffect } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../types';\nimport { getSearchWith } from '../utils/searchHelper';\nimport {\n  ALL_KEY,\n  CENTURIES_KEY,\n  QUERY_KEY,\n  SEX_KEY,\n  centuries,\n  sortBySex,\n} from '../utils/constants';\n\ntype Props = {\n  setFilteredPeople: React.Dispatch<React.SetStateAction<Person[]>>,\n  allPeople: Person[];\n};\n\nexport const PeopleFilters: React.FC<Props> = ({\n  setFilteredPeople,\n  allPeople,\n}) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const centuriesFromParams = searchParams.getAll(CENTURIES_KEY) || [];\n\n  useEffect(() => {\n    let filteredPeople = [...allPeople];\n    const query = searchParams.get(QUERY_KEY) || '';\n    const formattedQuery = query.toLowerCase().trim();\n\n    if (formattedQuery) {\n      filteredPeople = filteredPeople?.filter(p => p.name.toLowerCase()\n        .includes(formattedQuery)\n        || p.motherName?.toLowerCase().includes(formattedQuery)\n        || p.fatherName?.toLowerCase()\n          .includes(formattedQuery));\n    }\n\n    const sexParam = searchParams.get(SEX_KEY) || '';\n\n    if (sexParam === ALL_KEY) {\n      searchParams.delete(SEX_KEY);\n    }\n\n    if (searchParams.get(SEX_KEY)) {\n      filteredPeople = filteredPeople\n        .filter(p => p.sex === searchParams.get(SEX_KEY)?.slice(0, 1));\n    }\n\n    const centuriesToFilter = searchParams.getAll(CENTURIES_KEY);\n\n    if (centuriesToFilter && centuriesToFilter.length) {\n      filteredPeople = filteredPeople\n        .filter(p => centuriesToFilter\n          .includes((p.born + 99).toString().slice(0, 2)));\n    }\n\n    setFilteredPeople(filteredPeople);\n  }, [searchParams]);\n\n  const handleSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const params = new URLSearchParams(searchParams);\n\n    params.set(QUERY_KEY, event.target.value);\n\n    if (!event.target.value) {\n      params.delete(QUERY_KEY);\n    }\n\n    setSearchParams(params);\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        {sortBySex.map(key => (\n          <Link\n            to={{\n              search: getSearchWith(searchParams, {\n                [SEX_KEY]: key === ALL_KEY ? null : key.toLowerCase(),\n              }),\n            }}\n            key={key}\n            className={cn({\n              'is-active': (!searchParams.get(SEX_KEY) && key === ALL_KEY)\n              || searchParams.get(SEX_KEY) === key.toLowerCase(),\n            })}\n          >\n            {key}\n          </Link>\n        ))}\n\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={searchParams.get(QUERY_KEY) || ''}\n            onChange={handleSearch}\n          />\n\n          <span className=\"icon is-left\">\n            <i\n              className=\"fas fa-search\"\n              aria-hidden=\"true\"\n              onClick={() => searchParams.delete(QUERY_KEY)}\n            />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {centuries.map(century => (\n              <Link\n                to={{\n                  search: getSearchWith(searchParams, {\n                    [CENTURIES_KEY]: centuriesFromParams\n                      .includes(century)\n                      ? centuriesFromParams\n                        .filter(c => c !== century)\n                      : [...centuriesFromParams, century],\n                  }),\n                }}\n                key={century}\n                data-cy=\"century\"\n                className={cn('button mr-1', {\n                  'is-info': searchParams\n                    .getAll(CENTURIES_KEY).includes(century),\n                })}\n              >\n                {century}\n              </Link>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <Link\n              data-cy=\"centuryALL\"\n              className={cn('button is-success',\n                {\n                  'is-outlined': !!searchParams\n                    .getAll(CENTURIES_KEY)?.length,\n                })}\n              to={{\n                search: getSearchWith(searchParams, {\n                  [CENTURIES_KEY]: null,\n                }),\n              }}\n            >\n              All\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <Link\n          className=\"button is-link is-outlined is-fullwidth\"\n          to=\"/people\"\n        >\n          Reset all filters\n        </Link>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Link, useParams, useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person,\n  mother?: Person,\n  father?: Person,\n};\n\nexport const PersonInfo: React.FC<Props> = ({\n  person,\n  mother,\n  father,\n}) => {\n  const { personSlug } = useParams();\n  const [searchParams] = useSearchParams();\n\n  const getElement = (parent: Person | undefined,\n    parentName: string | null) => {\n    let element;\n\n    switch (true) {\n      case (!!parent):\n        element = (\n          <Link\n            to={`${parent?.slug}`}\n            className={cn({\n              'has-text-danger': parent?.sex === 'f',\n            })}\n          >\n            {parent?.name}\n          </Link>\n        );\n        break;\n\n      case (parentName !== null):\n        element = parentName;\n        break;\n\n      default:\n        element = '-';\n        break;\n    }\n\n    return element;\n  };\n\n  const motherElement = getElement(mother, person.motherName);\n  const fatherElement = getElement(father, person.fatherName);\n\n  return (\n    <>\n      <tr\n        data-cy=\"person\"\n        className={cn({\n          'has-background-warning': personSlug === person.slug,\n        })}\n      >\n        <td>\n          <Link\n            to={`/people/${person?.slug}?${searchParams.toString()}`}\n            className={cn({\n              'has-text-danger': person.sex === 'f',\n            })}\n          >\n            {person.name}\n          </Link>\n        </td>\n\n        <td>{person.sex}</td>\n        <td>{person.born}</td>\n        <td>{person.died}</td>\n        <td>{motherElement}</td>\n        <td>{fatherElement}</td>\n      </tr>\n    </>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { PersonInfo } from './PersonInfo';\nimport { Person, SortBy, SortOrder } from '../types';\nimport { getSearchWith } from '../utils/searchHelper';\nimport { sort } from '../utils/sort';\nimport { ORDER_KEY, SORT_KEY } from '../utils/constants';\n\ntype Props = {\n  people: Person[],\n  setPeople: React.Dispatch<React.SetStateAction<Person[]>>\n};\n\nconst tableHeadings = [\n  { title: 'Name', sort: true },\n  { title: 'Sex', sort: true },\n  { title: 'Born', sort: true },\n  { title: 'Died', sort: true },\n  { title: 'Mother', sort: false },\n  { title: 'Father', sort: false },\n];\n\nexport const PeopleTable: React.FC<Props> = ({\n  people,\n  setPeople,\n}) => {\n  const [searchParams] = useSearchParams();\n\n  const getParent = (parentName: string | null) => {\n    return people?.find(p => parentName === p.name);\n  };\n\n  const sortBy = searchParams.get(SORT_KEY) as SortBy;\n  const orderBy = searchParams.get(ORDER_KEY) as SortOrder;\n\n  useEffect(() => {\n    if (sortBy) {\n      const sortedPeople = sort(people, sortBy, orderBy || 'asc');\n\n      setPeople(sortedPeople);\n    }\n  }, [sortBy, orderBy]);\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {tableHeadings.map(header => (\n            <th key={header.title}>\n              <span className=\"is-flex is-flex-wrap-nowrap\">\n                {header.title}\n\n                {header.sort && (\n                  <Link to={{\n                    search: getSearchWith(searchParams, {\n                      [SORT_KEY]: sortBy === header.title.toLowerCase()\n                        && orderBy\n                        ? null : header.title.toLowerCase(),\n                      [ORDER_KEY]: !orderBy\n                        && sortBy === header.title.toLowerCase()\n                        ? 'desc' : null,\n                    }),\n                  }}\n                  >\n                    <span className=\"icon\">\n                      <i className={cn('fas fa-sort', {\n                        'fa-sort-up': sortBy && !orderBy\n                          && sortBy === header.title.toLowerCase(),\n                        'fa-sort-down': sortBy && orderBy\n                          && sortBy === header.title.toLowerCase(),\n                      })}\n                      />\n                    </span>\n                  </Link>\n                )}\n              </span>\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {people?.map(person => {\n          const mother = getParent(person.motherName);\n          const father = getParent(person.fatherName);\n\n          return (\n            <PersonInfo\n              key={person.slug}\n              person={person}\n              mother={mother}\n              father={father}\n            />\n          );\n        })}\n\n      </tbody>\n    </table>\n  );\n};\n","import { Person, SortBy, SortOrder } from '../types';\n\nexport const sort = (peoples: Person[], sortBy: SortBy, order: SortOrder) => {\n  let newPeoples = [...peoples];\n\n  switch (sortBy) {\n    case 'born':\n    case 'died':\n      newPeoples = newPeoples.sort((a, b) => b[sortBy] - a[sortBy]);\n      break;\n    case 'sex':\n    case 'name':\n      newPeoples = newPeoples\n        .sort((a, b) => a[sortBy].localeCompare(b[sortBy]));\n      break;\n    default:\n      break;\n  }\n\n  if (order === 'desc') {\n    newPeoples.reverse();\n  }\n\n  return newPeoples;\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport { PeopleFilters } from './PeopleFilters';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\n\nexport const PeoplePage = () => {\n  const [filteredPeople, setFilteredPeople] = useState<Person[]>([]);\n  const [allPeople, setAllPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n\n  useEffect(() => {\n    const downloadPeople = async () => {\n      try {\n        const peopleFromServer = await getPeople();\n\n        setFilteredPeople(peopleFromServer);\n        setAllPeople(peopleFromServer);\n      } catch (error) {\n        setHasError(true);\n\n        throw error;\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    downloadPeople();\n  }, []);\n\n  let elementToRender;\n\n  switch (true) {\n    case (isLoading):\n      elementToRender = (\n        <Loader />\n      );\n      break;\n\n    case (hasError):\n      elementToRender = (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n      );\n      break;\n\n    case (!allPeople.length):\n      elementToRender = (\n        <p data-cy=\"noPeopleMessage\">\n          There are no people on the server\n        </p>\n      );\n      break;\n\n    case (!filteredPeople?.length):\n      elementToRender = (\n        <p>There are no people matching the current search criteria</p>\n      );\n      break;\n\n    case (!!filteredPeople?.length):\n      elementToRender = (\n        <PeopleTable\n          people={filteredPeople}\n          setPeople={setFilteredPeople}\n        />\n      );\n      break;\n\n    default:\n      break;\n  }\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            {!!allPeople?.length && (\n              <PeopleFilters\n                setFilteredPeople={setFilteredPeople}\n                allPeople={allPeople}\n              />\n            )}\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {elementToRender}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nexport const Navbar: React.FC = () => {\n  const getClassName = ({ isActive }: { isActive: boolean }) => {\n    return cn('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    });\n  };\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={getClassName}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getClassName}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import React from 'react';\n\nexport const HomePage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { PeoplePage } from './components/PeoplePage';\nimport { Navbar } from './components/Navbar';\nimport { HomePage } from './components/HomePage';\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"/people\" element={<PeoplePage />}>\n              <Route path=\":personSlug\" element={<PeoplePage />} />\n            </Route>\n\n          </Routes>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}